#!/bin/bash
# -*- coding: utf-8 mode: sh -*- vim:sw=4:sts=4:et:ai:si:sta:fenc=utf-8
MYDIR="$(dirname -- "$0")"
if [ ! -f "$MYDIR/sbin/vendor/nulib/php/load.sh" ]; then
    if [ -f "$MYDIR/build.env" ]; then config="$MYDIR/build.env"
    else config="$MYDIR/.build.env.dist"
    fi
    "$MYDIR/sbin/rundk" -0 --unless-exists -c "$config" || exit 1
fi
"$MYDIR/sbin/bootstrap" && source "$MYDIR/sbin/vendor/nulib/php/load.sh" || exit 1
DREMGR="$MYDIR"
source "$DREMGR/sbin/functions.sh" || exit 1

BUILD_ARGS=(
    REGISTRY
    APT_PROXY
    APT_MIRROR
    SEC_MIRROR
    TIMEZONE
)

function _build() {
    local image="${PRIVAREG:+$PRIVAREG/}dremgr/$1"
    if [ -n "$ForceBuild" -o -z "$(dklsimg "$image")" ]; then
        estep "Construction de $image"
        args=(
            -f "$DREMGR/Dockerfile.$1"
            ${NoCache:+--no-cache}
            ${PlainOutput:+--progress plain}
            -t "$image"
        )
        for arg in "${BUILD_ARGS[@]}"; do
            args+=(--build-arg "$arg=${!arg}")
        done
        docker build "${args[@]}" "$DREMGR" || die
        if [ -n "$Push" ]; then
            if [ -n "$PRIVAREG" ]; then
                estep "Poussement de $image"
                docker push "$image" || die
            else
                ewarn "PRIVAREG non défini: impossible de pousser l'image"
            fi
        fi
    fi
}
function build_images() {
    local image
    source "$DREMGR/build.env"

    _build db
    _build web
    _build pgadmin
    _build adminer
}

action=build
ForceBuild=
NoCache=
PlainOutput=
Push=
args=(
    "Construire les images pour DRE"
    #"usage"
    --check-only action=none "++Ne faire que la vérification de l'environnement"
    --bootstrap action=bootstrap "++Mettre à jour les outils en lançant de nouveau sbin/bootstrap"
    -r,--rebuild ForceBuild=1 "Forcer la (re)construction de l'image"
    -j,--no-cache NoCache=1 "++Construire l'image en invalidant le cache"
    -D,--plain-output PlainOutput=1 "++Afficher le détail du build"
    -p,--push Push=1 "Pousser les images vers le registry après construction"
)
parse_args "$@"; set -- "${args[@]}"

build_check_env || die
[ "$action" == none ] && exit 0

case "$action" in
bootstrap) "$DREMGR/sbin/bootstrap" --force "$@";;
build) build_images "$@";;
*) die "$action: action non implémentée";;
esac
