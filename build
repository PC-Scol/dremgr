#!/bin/bash
# -*- coding: utf-8 mode: sh -*- vim:sw=4:sts=4:et:ai:si:sta:fenc=utf-8
MYDIR="$(dirname -- "$0")"
"$MYDIR/sbin/rundk" --bs --ue --ci || exit 1
source "$MYDIR/sbin/vendor/nulib/php/load.sh" || exit 1
DREMGR="$MYDIR"
source "$MYDIR/sbin/functions.sh" || exit 1

BUILD_ARGS=(
    REGISTRY
    APT_PROXY
    APT_MIRROR
    SEC_MIRROR
    TIMEZONE
)

function _build() {
    local image="${PRIVAREG:+$PRIVAREG/}dremgr/$1"
    if [ -n "$ForceBuild" -o -z "$(dklsimg "$image")" ]; then
        estep "Construction de $image"
        args=(
            -f "$DREMGR/Dockerfile.$1"
            ${Pull:+--pull}
            ${NoCache:+--no-cache}
            ${PlainOutput:+--progress plain}
            -t "$image"
        )
        for arg in "${BUILD_ARGS[@]}"; do
            args+=(--build-arg "$arg=${!arg}")
        done
        docker build "${args[@]}" "$DREMGR" || die
        if [ -n "$Push" ]; then
            if [ -n "$PRIVAREG" ]; then
                estep "Poussement de $image"
                docker push "$image" || die
            else
                ewarn "PRIVAREG non défini: impossible de pousser l'image"
            fi
        fi
    fi
}
function build_images() {
    local image sourced

    [ $# -gt 0 ] || set -- rundk db web pgadmin adminer
    for image in "$@"; do
        case "$image" in
        rundk)
            local -a args=(--bootstrap)
            [ -z "$ForceBuild" ] && args+=(--unless-exists)
            [ -n "$Pull" ] && args+=(--pull)
            [ -n "$NoCache" ] && args+=(--no-cache)
            "$DREMGR/sbin/rundk" "${args[@]}"
            ;;
        *)
            if [ -z "$sourced" ]; then
                source "$DREMGR/build.env"
                sourced=1
            fi
            _build "$image"
            ;;
        esac
    done
}

action=build
ForceBuild=
Pull=
NoCache=
PlainOutput=
Push=
args=(
    "Construire les images pour DRE"
    #"usage"
    --check-only action=none "++Ne faire que la vérification de l'environnement"
    --bootstrap action=bootstrap "++Mettre à jour les outils en lançant de nouveau sbin/bootstrap"
    -r,--rebuild ForceBuild=1 "Forcer la (re)construction de l'image"
    -U,--pull Pull=1 "++Forcer le re-téléchargement des images dépendantes"
    -j,--no-cache NoCache=1 "++Construire l'image en invalidant le cache"
    -D,--plain-output PlainOutput=1 "++Afficher le détail du build"
    -p,--push Push=1 "Pousser les images vers le registry après construction"
)
parse_args "$@"; set -- "${args[@]}"

build_check_env || die
[ "$action" == none ] && exit 0

case "$action" in
bootstrap) "$DREMGR/sbin/bootstrap" --force "$@";;
build) build_images "$@";;
*) die "$action: action non implémentée";;
esac
